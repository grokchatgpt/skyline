// AUTO-GENERATED FILE - DO NOT MODIFY DIRECTLY
// Generated by proto/build-proto.js

import { Controller } from "./index"
import { StreamingResponseHandler } from "./grpc-handler"
import { handleAccountServiceRequest, handleAccountServiceStreamingRequest } from "./account/index"
import { handleBrowserServiceRequest, handleBrowserServiceStreamingRequest } from "./browser/index"
import { handleCheckpointsServiceRequest, handleCheckpointsServiceStreamingRequest } from "./checkpoints/index"
import { handleFileServiceRequest, handleFileServiceStreamingRequest } from "./file/index"
import { handleMcpServiceRequest, handleMcpServiceStreamingRequest } from "./mcp/index"
import { handleStateServiceRequest, handleStateServiceStreamingRequest } from "./state/index"
import { handleTaskServiceRequest, handleTaskServiceStreamingRequest } from "./task/index"
import { handleWebServiceRequest, handleWebServiceStreamingRequest } from "./web/index"
import { handleModelsServiceRequest, handleModelsServiceStreamingRequest } from "./models/index"
import { handleSlashServiceRequest, handleSlashServiceStreamingRequest } from "./slash/index"

/**
 * Configuration for a service handler
 */
export interface ServiceHandlerConfig {
	requestHandler: (controller: Controller, method: string, message: any) => Promise<any>
	streamingHandler: (
		controller: Controller,
		method: string,
		message: any,
		responseStream: StreamingResponseHandler,
		requestId?: string,
	) => Promise<void>
}

/**
 * Map of service names to their handler configurations
 */
export const serviceHandlers: Record<string, ServiceHandlerConfig> = {
	"skyline.AccountService": {
		requestHandler: handleAccountServiceRequest,
		streamingHandler: handleAccountServiceStreamingRequest,
	},
	"skyline.BrowserService": {
		requestHandler: handleBrowserServiceRequest,
		streamingHandler: handleBrowserServiceStreamingRequest,
	},
	"skyline.CheckpointsService": {
		requestHandler: handleCheckpointsServiceRequest,
		streamingHandler: handleCheckpointsServiceStreamingRequest,
	},
	"skyline.FileService": {
		requestHandler: handleFileServiceRequest,
		streamingHandler: handleFileServiceStreamingRequest,
	},
	"skyline.McpService": {
		requestHandler: handleMcpServiceRequest,
		streamingHandler: handleMcpServiceStreamingRequest,
	},
	"skyline.StateService": {
		requestHandler: handleStateServiceRequest,
		streamingHandler: handleStateServiceStreamingRequest,
	},
	"skyline.TaskService": {
		requestHandler: handleTaskServiceRequest,
		streamingHandler: handleTaskServiceStreamingRequest,
	},
	"skyline.WebService": {
		requestHandler: handleWebServiceRequest,
		streamingHandler: handleWebServiceStreamingRequest,
	},
	"skyline.ModelsService": {
		requestHandler: handleModelsServiceRequest,
		streamingHandler: handleModelsServiceStreamingRequest,
	},
	"skyline.SlashService": {
		requestHandler: handleSlashServiceRequest,
		streamingHandler: handleSlashServiceStreamingRequest,
	},
}
